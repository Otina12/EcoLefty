@using EcoLefty.Domain.Common
@using System.Security.Claims
@model PagedList<EcoLefty.Application.Offers.DTOs.OfferDetailsResponseDto>

@{
    ViewBag.Title = "Offers Index";
    var isUser = User.FindFirst(ClaimTypes.Role)?.Value == "User";
}

<div class="container mt-4">
    <h2 class="mb-4">Offers</h2>
    
    <!-- Search Form -->
    <form asp-action="GetAll" method="get" class="mb-4">
        <div class="row g-3">
            <!-- Search Text -->
            <div class="col-md-2">
                <input type="text" class="form-control" name="SearchText" placeholder="Search offers..." value="@ViewBag.CurrentSearch">
            </div>

            <!-- Company Filter -->
            <div class="col-md-2">
                <select class="form-select" name="CompanyId">
                    <option value="">All Companies</option>
                    @foreach (var company in ViewBag.Companies)
                    {
                        <option value="@company.Id" selected="@(ViewBag.CurrentCompanyId == company.Id)">@company.Name</option>
                    }
                </select>
            </div>

            <!-- Category Filter -->
            <div class="col-md-2">
                <select class="form-select" name="CategoryId">
                    <option value="">All Categories</option>
                    @foreach (var category in ViewBag.Categories)
                    {
                        <option value="@category.Id" selected="@(ViewBag.CurrentCategoryId == category.Id)">@category.Name</option>
                    }
                </select>
            </div>

            <!-- Sort Options -->
            <div class="col-md-1">
                <select class="form-select" name="SortByColumn">
                    <option value="">Sort By...</option>
                    <option value="startdate" selected=@(ViewBag.CurrentSort == "startdate")>Start Date</option>
                    <option value="enddate" selected=@(ViewBag.CurrentSort == "enddate")>End Date</option>
                    <option value="price" selected=@(ViewBag.CurrentSort == "price")>Price</option>
                </select>
            </div>

            <!-- Sort Direction -->
            <div class="col-auto">
                <select class="form-select" name="SortByAscending">
                    <option value="true" selected=@(ViewBag.CurrentSortDirection == true)>Asc</option>
                    <option value="false" selected=@(ViewBag.CurrentSortDirection == false)>Desc</option>
                </select>
            </div>

            <!-- Only Active Switch -->
            <div class="col-auto">
                <div class="form-check form-switch mt-2">
                    <input type="checkbox" class="form-check-input" name="OnlyActive" value="true" id="onlyActiveSwitch"
                    @(ViewBag.OnlyActive ? "checked" : "")>
                    <label class="form-check-label" for="onlyActiveSwitch">Active</label>
                </div>
            </div>

            <!-- Only Followed Categories Switch -->
            @if (isUser)
            {
                <div class="col-auto">
                    <div class="form-check form-switch mt-2">
                        <input type="checkbox" class="form-check-input" name="OnlyFollowedCategories" value="true" id="onlyFollowedCategoriesSwitch"
                        @(ViewBag.OnlyFollowedCategories ? "checked" : "")>
                        <label class="form-check-label" for="onlyFollowedCategoriesSwitch">Followed</label>
                    </div>
                </div>
            }

            <!-- Search Button -->
            <div class="col-auto">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    </form>
    
    <div class="row">
        @if (Model != null && Model.Any())
        {
            foreach (var offer in Model)
            {
                <div class="col-md-12">
                    @await Html.PartialAsync("_OfferCard", offer)
                </div>
            }
        }
        else
        {
            <div class="col-md-12">
                <p>No offers found.</p>
            </div>
        }
    </div>
    
    <!-- Pagination -->
    @if (Model != null && Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                <!-- First Page -->
                <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("GetAll", new { 
                        SearchText = ViewBag.CurrentSearch, 
                        CompanyId = ViewBag.CurrentCompanyId,
                        CategoryId = ViewBag.CurrentCategoryId,
                        SortByColumn = ViewBag.CurrentSort,
                        SortByAscending = ViewBag.CurrentSortDirection,
                        OnlyActive = ViewBag.OnlyActive,
                        OnlyFollowedCategories = ViewBag.OnlyFollowedCategories,
                        PageIndex = 1,
                        PageSize = Model.PageSize
                    })">
                        First
                    </a>
                </li>
                
                <!-- Previous Page -->
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("GetAll", new { 
                        SearchText = ViewBag.CurrentSearch, 
                        CompanyId = ViewBag.CurrentCompanyId,
                        CategoryId = ViewBag.CurrentCategoryId,
                        SortByColumn = ViewBag.CurrentSort,
                        SortByAscending = ViewBag.CurrentSortDirection,
                        OnlyActive = ViewBag.OnlyActive,
                        OnlyFollowedCategories = ViewBag.OnlyFollowedCategories,
                        PageIndex = Model.PageIndex - 1,
                        PageSize = Model.PageSize
                    })">
                        Previous
                    </a>
                </li>
                
                <!-- Page Numbers -->
                @{
                    int startPage = Math.Max(1, Model.PageIndex - 2);
                    int endPage = Math.Min(Model.TotalPages, startPage + 4);
                    startPage = Math.Max(1, endPage - 4);
                }
                
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" href="@Url.Action("GetAll", new { 
                            SearchText = ViewBag.CurrentSearch, 
                            CompanyId = ViewBag.CurrentCompanyId,
                            CategoryId = ViewBag.CurrentCategoryId,
                            SortByColumn = ViewBag.CurrentSort,
                            SortByAscending = ViewBag.CurrentSortDirection,
                            OnlyActive = ViewBag.OnlyActive,
                            OnlyFollowedCategories = ViewBag.OnlyFollowedCategories,
                            PageIndex = i,
                            PageSize = Model.PageSize
                        })">
                            @i
                        </a>
                    </li>
                }
                
                <!-- Next Page -->
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("GetAll", new { 
                        SearchText = ViewBag.CurrentSearch, 
                        CompanyId = ViewBag.CurrentCompanyId,
                        CategoryId = ViewBag.CurrentCategoryId,
                        SortByColumn = ViewBag.CurrentSort,
                        SortByAscending = ViewBag.CurrentSortDirection,
                        OnlyActive = ViewBag.OnlyActive,
                        OnlyFollowedCategories = ViewBag.OnlyFollowedCategories,
                        PageIndex = Model.PageIndex + 1,
                        PageSize = Model.PageSize
                    })">
                        Next
                    </a>
                </li>
                
                <!-- Last Page -->
                <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("GetAll", new { 
                        SearchText = ViewBag.CurrentSearch, 
                        CompanyId = ViewBag.CurrentCompanyId,
                        CategoryId = ViewBag.CurrentCategoryId,
                        SortByColumn = ViewBag.CurrentSort,
                        SortByAscending = ViewBag.CurrentSortDirection,
                        OnlyActive = ViewBag.OnlyActive,
                        OnlyFollowedCategories = ViewBag.OnlyFollowedCategories,
                        PageIndex = Model.TotalPages,
                        PageSize = Model.PageSize
                    })">
                        Last
                    </a>
                </li>
            </ul>
        </nav>
        
        <div class="text-center mt-2">
            <span class="text-muted">
                Showing page @Model.PageIndex of @Model.TotalPages (Total: @Model.TotalCount items)
            </span>
        </div>
    }
</div>